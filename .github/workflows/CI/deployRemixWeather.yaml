name: Terraform Deploy to AKS

on:
  pull_request:
    branches:
      - main
    paths:
      - 'app/**'
      - 'routes/**'
      - 'public/**'
      - 'package.json'
      - 'remix.config.js'
      - 'infra/**'
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'routes/**'
      - 'public/**'
      - 'package.json'
      - 'remix.config.js'
      - 'infra/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Set environment
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "env=test" >> $GITHUB_OUTPUT
          else
            echo "env=production" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init
        working-directory: infra
        run: terraform init -backend-config="env/${{ steps.set-env.outputs.env }}.tfbackend"

      - name: Terraform Validate
        working-directory: infra
        run: terraform validate

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -var-file="env/${{ steps.set-env.outputs.env }}.tfvars"

      - name: Terraform Apply
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        working-directory: infra
        run: terraform apply -auto-approve -var-file="env/${{ steps.set-env.outputs.env }}.tfvars"

